<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- ${LOG_FILE}由application配置文件的logging.file指定-->
    <property name="PROJECT_NAME" value="${LOG_FILE}"/>
    <!-- 单个日志文件大小限制 -->
    <property name="MAX_FILE_SIZE" value="25MB"/>
    <!-- 所有日志文件大小限制 -->
    <property name="TOTAL_FILE_SIZE" value="2GB"/>
    <!-- 保存最近30天的日志(logback实现目前存在问题,可以用TOTAL_FILE_SIZE限制，防止磁盘撑爆) -->
    <property name="MAX_HISTORY" value="30"/>
    <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
    <property name="CONSOLE_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n" />
    <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
    <property name="FILE_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"/>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${CONSOLE_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 日志记录器，日期滚动记录，超过一定大小进行切分 -->
    <appender name="ROLLING_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${PROJECT_NAME}/${PROJECT_NAME}.log</file>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 归档的日志文件的路径，例如今天是2017-11-02日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。 而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
            <fileNamePattern>${LOG_PATH}/${PROJECT_NAME}/%d{yyyy-MM,aux}/${PROJECT_NAME}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <totalSizeCap>${TOTAL_FILE_SIZE}</totalSizeCap>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <!-- 除按日期记录之外，还配置了日志文件不能超过${MAX_FILE_SIZE}，若超过${MAX_FILE_SIZE}，日志文件会以索引0开始， 命名日志文件，例如log-error-2017-11-02.0.log -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!-- 追加方式记录日志 -->
        <append>true</append>
        <!-- 日志文件的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${FILE_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <springProfile name="dev,local,default">
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
        </root>
        <logger name="org.springframework" level="INFO"/>
        <logger name="cn.jaychang" level="DEBUG"/>
        <!-- 若使用mybatis，可开启下方配置，方便查看sql执行情况-->
        <!--<logger name="org.apache.ibatis" level="INFO"/>-->
        <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="trace"/>
        <logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="trace"/>
    </springProfile>

    <springProfile name="test">
        <root level="INFO">
            <appender-ref ref="ROLLING_FILE"/>
        </root>
    </springProfile>

    <springProfile name="prod,production">
        <root level="ERROR">
            <appender-ref ref="ROLLING_FILE"/>
        </root>
    </springProfile>
</configuration>